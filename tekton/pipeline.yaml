apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: cd-pipeline
spec:
  params:
    - name: repo-url
      type: string
      description: "La URL del repositorio Git a clonar."
    - name: branch
      type: string
      description: "La rama del repositorio a clonar."
      default: main
    - name: build-image
      type: string
      description: "Destino de la imagen (registry/namespace/name:tag)"
    - name: database-uri
      type: string
      description: "URI de base de datos para las pruebas (nose)."
      default: "sqlite:///test.db"

  workspaces:
    - name: pipeline-workspace
      description: "Workspace ef√≠mero por Task (emptyDir)."

  tasks:
    - name: lint
      taskRef:
        name: flake8-run-git
      workspaces:
        - name: source
          workspace: pipeline-workspace
      params:
        - name: repo-url
          value: $(params.repo-url)
        - name: branch
          value: $(params.branch)
        - name: image
          value: "python:3.9-slim"
        # Agregamos --exit-zero para que flake8 no falle el pipeline
        - name: args
          value: "--count --max-complexity=10 --max-line-length=127 --statistics --exit-zero"

    - name: tests
      taskRef:
        name: nose-git
      workspaces:
        - name: source
          workspace: pipeline-workspace
      params:
        - name: repo-url
          value: $(params.repo-url)
        - name: branch
          value: $(params.branch)
        - name: database_uri
          value: "$(params.database-uri)"
        - name: args
          value: "-v"

    - name: build
      runAfter:
        - lint
        - tests
      taskRef:
        name: buildah-git
      workspaces:
        - name: source
          workspace: pipeline-workspace
      params:
        - name: repo-url
          value: $(params.repo-url)
        - name: branch
          value: $(params.branch)
        - name: image
          value: "$(params.build-image)"
        - name: dockerfile
          value: "Dockerfile"
        - name: context
          value: "."
        - name: tlsverify
          value: "false"

    - name: deploy
      runAfter:
        - build
      taskRef:
        name: openshift-deploy-git
      workspaces:
        - name: source
          workspace: pipeline-workspace
      params:
        - name: repo-url
          value: $(params.repo-url)
        - name: branch
          value: $(params.branch)
        - name: build-image
          value: "$(params.build-image)"
